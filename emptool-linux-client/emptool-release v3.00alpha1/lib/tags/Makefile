# empeg-car library Makefile
#
# (C) 1999 empeg ltd.
#
# This software is licensed under the GNU General Public Licence (see file
# COPYING), unless you possess an alternative written licence from empeg ltd.
#
# (:Empeg Source Release 1.15 13-Mar-2003 18:15 rob:)
#
# Authors:
#   Mike Crowe <mac@empeg.com>
#

.PHONY: clean depclean distclean runtests tests

TOP=../..
include $(TOP)/Make.rules

TARGET_CXXFLAGS+=-D "_LIB"
TARGET_LIBDIR=$(TARGET_GENERIC_LIBDIR)

SRC_COMMON:=	asf.cpp \
		genre.cpp \
		filename_to_title.cpp \
		hex.cpp \
		id3.cpp \
		id3_writer.cpp \
		id3v1.cpp \
		id3v2.cpp \
		id3v2_format.cpp \
		id3v1tags.cpp \
		mp3_frame_info.cpp \
		ogg.cpp \
		rid.cpp \
		tag_extractor.cpp \
		tag_writer.cpp \
		wav.cpp

SRC_ALL:=$(SRC_COMMON)

TARGET_SRC:=$(wildcard $(SRC_ALL))
TARGET_HEADERS=

TARGET_OBJS1=$(TARGET_SRC:%.c=$(TARGET_PREFIX)%$(OBJ_SUFFIX))
TARGET_OBJS=$(TARGET_OBJS1:%.cpp=$(TARGET_PREFIX)%$(OBJ_SUFFIX))
TARGET_DEPS=$(wildcard $(TARGET_OBJS:$(OBJ_SUFFIX)=.d))

TEST_SRC := id3_writer_test.cpp
TEST_OBJS:= $(TEST_SRC:%.cpp=$(TARGET_PREFIX)%.o)

THIS_TARGET=$(TARGET_GENERIC)

TARGET=$(TARGET_LIBDIR)$(LIB_PREFIX)empeg_tags$(LIB_SUFFIX)

$(TARGET) : $(TARGET_OBJS)

.PHONY: downloadable-root tests
downloadable-root: $(TARGET)

tests: $(TARGET_PREFIX)tests

runtests: tests
	$(TARGET_PREFIX)tests

$(TARGET_PREFIX)tests: $(TEST_OBJS) $(TARGET)
	$(MAKE) -C $(TOP)/lib/core
	$(MAKE) -C $(TOP)/lib/util
	$(MAKE) -C $(TOP)/lib/tags
	$(MAKE) -C $(TOP)/lib/berkeley_db -f Makefile.empeg
	$(MAKE) -C $(TOP)/lib/db
	$(MAKE) -C $(TOP)/lib/source
	$(TARGET_LD) $(TEST_OBJS) $(TARGET) $(TARGET_LDFLAGS) -lempeg_source \
		-lberkeley_db -lempeg_db -lempeg_util -lempeg_core -lpthread \
		-o $(TARGET_PREFIX)tests

readtags: $(TARGET_PREFIX)readtags.o $(TARGET)
	$(MAKE) -C $(TOP)/lib/core
	$(MAKE) -C $(TOP)/lib/util
	$(MAKE) -C $(TOP)/lib/tags
	$(MAKE) -C $(TOP)/lib/berkeley_db -f Makefile.empeg
	$(MAKE) -C $(TOP)/lib/db
	$(MAKE) -C $(TOP)/lib/source
	$(MAKE) -C $(TOP)/lib/vorbis -f Makefile.empeg
	$(TARGET_LD) $< $(TARGET) $(TARGET_LDFLAGS) -lempeg_source \
		-lberkeley_db -lempeg_db -lvorbis -lempeg_util -lempeg_core -lpthread \
		-o readtags

tag_errors.h: tag_errors.mes $(ERRBUILD)
	$(ERRBUILD) -h -o tag_errors tag_errors.mes

# Automatically-generated headers
#
# These cause a problem, as they must exist before compilation starts, yet
# without these rules no dependency on them would exist except for the ones
# generated by compilation. We break this vicious circle by creating an (empty)
# sub-makefile; make remakes sub-makefiles before doing any real work and we
# can subvert this mechanism to make our generated headers too.

.force-header-generation:  tag_errors.h
	touch .force-header-generation

ifneq ($(CLEANING), 1)
-include .force-header-generation
ifneq ($(TARGET_DEPS),)
-include $(TARGET_DEPS)
endif
endif

clean :
	$(RM) -rf $(TARGET)
	$(RM) -rf $(TARGET_PREFIX)
	$(RM) core *~ 

distclean : clean
	$(RM) -rf arm-*-debug* pc-*-debug* win32-*-debug*
	$(RM) .depend
