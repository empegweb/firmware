# empeg-car protocol library Makefile
#
# (C) 1999-2000 empeg ltd.
#
# This software is licensed under the GNU General Public Licence (see file
# COPYING), unless you possess an alternative written licence from empeg ltd.
#
# (:Empeg Source Release 1.35 13-Mar-2003 18:15 rob:)
#
# Authors:
#   Mike Crowe <mac@empeg.com>
#

.PHONY: clean distclean depclean

TOP=../..
include $(TOP)/Make.rules

TARGET_CXXFLAGS+=-D "_LIB" -D "SUPPORT_TCP_PROTOCOL"

SRC_COMMON:= \
	connection_all.cpp \
	connection_all_net.cpp \
	crc.cpp \
	discovery.cpp \
	dyndata_format.cpp \
	net_discovery.cpp \
	packets.cpp \
	protocolclient.cpp \
	read_fid_stream.cpp \
	unicast_discovery.cpp \
	upgrader.cpp

SRC_UNIX:= \
	connection_unix.cpp \
	connection_unix_net.cpp \
	interval.cpp 

SRC_WIN32:= \
	connection_win32.cpp \
	enum_usb_devices_win32.cpp \
	serial_discovery_win32.cpp \
	usb_discovery_win32.cpp

ifeq ($(ARCH), win32)
SRC_ALL:=$(SRC_COMMON) $(SRC_WIN32)
else
SRC_ALL:=$(SRC_COMMON) $(SRC_UNIX)
endif

TARGET_SRC:=$(SRC_ALL)
TARGET_OBJS1=$(TARGET_SRC:%.c=$(TARGET_PREFIX)%$(OBJ_SUFFIX))
TARGET_OBJS=$(TARGET_OBJS1:%.cpp=$(TARGET_PREFIX)%$(OBJ_SUFFIX))

THIS_TARGET=$(TARGET_GENERIC)
TARGET=$(TARGET_GENERIC_LIBDIR)$(LIB_PREFIX)empeg_protocol$(LIB_SUFFIX)
# Implicit rules will take care of this
$(TARGET) : $(TARGET_OBJS)

.PHONY: downloadable-root
downloadable-root: $(TARGET)

clean :
	$(RM) -rf $(TARGET_OBJS) $(TARGET) discover discovery-test.o
	$(RM) -rf core *~ protocol_errors.h

discover: discovery.cpp $(TARGET)
	$(TARGET_CXX) discovery.cpp $(TARGET_CXXFLAGS) -o discovery-test.o -DTEST
#	$(TARGET_LD) discovery-test.o $(TARGET_LDFLAGS) $(TARGET_SPECIFIC_LIBDIR)libempeg_net.a -o discover $(TARGET)
	$(TARGET_LD) discovery-test.o $(TARGET_LDFLAGS) -lempeg_net -lempeg_core -o discover

distclean : clean
	$(RM) -rf $(TARGET_DEPS)
	$(RM) -rf $(TARGET_PREFIX)

protocol_errors.h: protocol_errors.mes
	$(ERRBUILD) -h -o protocol_errors protocol_errors.mes

# There's no test code for this yet.
.PHONY: tests runtests
tests :
runtests :

# Automatically-generated headers
#
# These cause a problem, as they must exist before compilation starts, yet
# without these rules no dependency on them would exist except for the ones
# generated by compilation. We break this vicious circle by creating an (empty)
# sub-makefile; make remakes sub-makefiles before doing any real work and we
# can subvert this mechanism to make our generated headers too.

.force-header-generation: protocol_errors.h

ifneq ($(CLEANING),1)
-include .force-header-generation
endif

ifneq ($(CLEANING),1)
TARGET_DEPS:=$(TARGET_OBJS:%$(OBJ_SUFFIX)=%.d) $(TEST_OBJS:%$(OBJ_SUFFIX)=%.d)
TARGET_DEPS:=$(wildcard $(TARGET_DEPS))
ifneq ($(TARGET_DEPS),)
-include $(TARGET_DEPS)
endif
endif
